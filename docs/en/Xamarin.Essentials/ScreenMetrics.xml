<Type Name="ScreenMetrics" FullName="Xamarin.Essentials.ScreenMetrics">
  <TypeSignature Language="C#" Value="public struct ScreenMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ScreenMetrics extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Essentials.ScreenMetrics" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Essentials</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This type represents the properties of the current screen.</summary>
    <remarks>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public double Density { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Density" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value representing the current screen density.</summary>
        <value>
          <para />
        </value>
        <remarks>This value is a multiple value, such that a retina display would be 2.0 or 3.0. On Windows, the scaling percent of 200% means that the density will be 2.0.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height of the screen for the current orientation.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This value is the height after rotation, so a landscape iPhone will have a smaller height than width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Xamarin.Essentials.ScreenOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Essentials.ScreenOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Essentials.ScreenOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the orientation of the device.</summary>
        <value></value>
        <remarks>If the device is a square device, then the orientation will be portrait.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public Xamarin.Essentials.ScreenRotation Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Essentials.ScreenRotation Rotation" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Essentials.ScreenRotation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current rotation from the designed orientation.</summary>
        <value></value>
        <remarks>This represents the degrees that the device has been rotated. For example, if this is a phone (which is designed for portrait) that has been rotated to landscape with the main buttoms to the right, then the device has been rotated to the left by 90 degrees.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the width of the screen in the current orientation.</summary>
        <value></value>
        <remarks>This value is the width after rotation, so a landscape Android phone will have a larget width than height.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
