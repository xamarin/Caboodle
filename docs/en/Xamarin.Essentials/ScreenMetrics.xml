<Type Name="ScreenMetrics" FullName="Xamarin.Essentials.ScreenMetrics">
  <TypeSignature Language="C#" Value="public struct ScreenMetrics : IEquatable&lt;Xamarin.Essentials.ScreenMetrics&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ScreenMetrics extends System.ValueType implements class System.IEquatable`1&lt;valuetype Xamarin.Essentials.ScreenMetrics&gt;" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Essentials.ScreenMetrics" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Essentials</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Xamarin.Essentials.ScreenMetrics&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-essentials-android;xamarin-essentials-ios;xamarin-essentials-uwp">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type represents the properties of the current screen.</summary>
    <remarks>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public double Density { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Density" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value representing the current screen density.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This value is a multiple value, such that a retina display would be 2.0 or 3.0. On Windows, the scaling percent of 200% means that the density will be 2.0.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Essentials.ScreenMetrics.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Object to compare</param>
        <summary>If equal to another object</summary>
        <returns>If equal</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Xamarin.Essentials.ScreenMetrics other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Xamarin.Essentials.ScreenMetrics other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Essentials.ScreenMetrics.Equals(Xamarin.Essentials.ScreenMetrics)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Xamarin.Essentials.ScreenMetrics" />
      </Parameters>
      <Docs>
        <param name="other">The other ScreenMetrics</param>
        <summary>If equal to another ScreenMetrics</summary>
        <returns>If equal</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Essentials.ScreenMetrics.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the hash code for object.</summary>
        <returns>The hash code</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the screen for the current orientation.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This value is the height after rotation, so a landscape iPhone will have a smaller height than width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Xamarin.Essentials.ScreenMetrics left, Xamarin.Essentials.ScreenMetrics right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Xamarin.Essentials.ScreenMetrics left, valuetype Xamarin.Essentials.ScreenMetrics right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Essentials.ScreenMetrics.op_Equality(Xamarin.Essentials.ScreenMetrics,Xamarin.Essentials.ScreenMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Xamarin.Essentials.ScreenMetrics" />
        <Parameter Name="right" Type="Xamarin.Essentials.ScreenMetrics" />
      </Parameters>
      <Docs>
        <param name="left">Left to compare</param>
        <param name="right">Right to compare</param>
        <summary>Equality operator for equals</summary>
        <returns>If equal</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Xamarin.Essentials.ScreenMetrics left, Xamarin.Essentials.ScreenMetrics right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Xamarin.Essentials.ScreenMetrics left, valuetype Xamarin.Essentials.ScreenMetrics right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Essentials.ScreenMetrics.op_Inequality(Xamarin.Essentials.ScreenMetrics,Xamarin.Essentials.ScreenMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Xamarin.Essentials.ScreenMetrics" />
        <Parameter Name="right" Type="Xamarin.Essentials.ScreenMetrics" />
      </Parameters>
      <Docs>
        <param name="left">Left to check</param>
        <param name="right">Right to check</param>
        <summary>Inequality check</summary>
        <returns>If not equal</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Xamarin.Essentials.ScreenOrientation Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Essentials.ScreenOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Essentials.ScreenOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the orientation of the device.</summary>
        <value>
          <para />
        </value>
        <remarks>If the device is a square device, then the orientation will be portrait.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public Xamarin.Essentials.ScreenRotation Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Essentials.ScreenRotation Rotation" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Essentials.ScreenRotation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current rotation from the designed orientation.</summary>
        <value>
          <para />
        </value>
        <remarks>This represents the degrees that the device has been rotated. For example, if this is a phone (which is designed for portrait) that has been rotated to landscape with the main buttoms to the right, then the device has been rotated to the left by 90 degrees.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Essentials.ScreenMetrics.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Essentials</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of the screen in the current orientation.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This value is the width after rotation, so a landscape Android phone will have a larget width than height.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
